name: 'üè∑Ô∏è Gemini Automated Issue Triage'

on:
  issues:
    types:
      - 'opened'
      - 'reopened'
  issue_comment:
    types:
      - 'created'
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'issue number to triage'
        required: true
        type: 'number'

concurrency:
  group: '${{ github.workflow }}-${{ github.event.issue.number }}'
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

permissions:
  contents: 'read'
  id-token: 'write'
  issues: 'write'
  statuses: 'write'

jobs:
  triage-issue:
    if: >
      github.event_name == 'issues' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
        contains(github.event.comment.body, '@gemini-cli /triage') &&
        (github.event.comment.author_association == 'OWNER' ||
         github.event.comment.author_association == 'MEMBER' ||
         github.event.comment.author_association == 'COLLABORATOR'))
    timeout-minutes: 5
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout repository'
        uses: 'actions/checkout@v4'

      - name: 'Generate GitHub App Token'
        id: 'generate_token'
        if: |-
          ${{ vars.APP_ID }}
        uses: 'actions/create-github-app-token@v1'
        with:
          app-id: '${{ vars.APP_ID }}'
          private-key: '${{ secrets.APP_PRIVATE_KEY }}'

      - name: 'Run Gemini Issue Triage'
        uses: 'google-github-actions/run-gemini-cli@v0'
        id: 'gemini_issue_triage'
        env:
          GITHUB_TOKEN: '${{ steps.generate_token.outputs.token || secrets.GITHUB_TOKEN }}'
          ISSUE_TITLE: '${{ github.event.issue.title }}'
          ISSUE_BODY: '${{ github.event.issue.body }}'
          ISSUE_NUMBER: '${{ github.event.issue.number }}'
          REPOSITORY: '${{ github.repository }}'
        with:
          gemini_cli_version: '${{ vars.GEMINI_CLI_VERSION }}'
          gcp_workload_identity_provider: '${{ vars.GCP_WIF_PROVIDER }}'
          gcp_project_id: '${{ vars.GOOGLE_CLOUD_PROJECT }}'
          gcp_location: '${{ vars.GOOGLE_CLOUD_LOCATION }}'
          gcp_service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'
          gemini_api_key: '${{ secrets.GEMINI_API_KEY }}'
          use_vertex_ai: '${{ vars.GOOGLE_GENAI_USE_VERTEXAI }}'
          use_gemini_code_assist: '${{ vars.GOOGLE_GENAI_USE_GCA }}'
          settings: |-
            {
              "maxSessionTurns": 25,
              "coreTools": [
                "run_shell_command(gh label list)",
                "run_shell_command(gh issue edit)",
                "run_shell_command(gh issue comment)"
              ],
              "telemetry": {
                "enabled": false,
                "target": "gcp"
              }
            }
          prompt: |-
            ## REGRA PRINCIPAL
            VOC√ä DEVE RESPONDER E COMENTAR ESTRITAMENTE EM PORTUGU√äS DO BRASIL.

            ## Papel
            Voc√™ √© um assistente especialista em triagem de issues no GitHub. Seu objetivo √© analisar a issue atual, escrever um coment√°rio √∫til em portugu√™s, e aplicar as etiquetas (labels) mais apropriadas.

            ## Passos
            1. Execute `gh label list` para obter todas as labels dispon√≠veis.
            2. Revise o t√≠tulo e o corpo da issue usando as vari√°veis de ambiente: "${ISSUE_TITLE}" e "${ISSUE_BODY}".
            3. Baseado na sua an√°lise, **escreva um coment√°rio conciso e prestativo em Portugu√™s do Brasil.** O coment√°rio deve resumir a issue e mencionar as labels que voc√™ est√° prestes a aplicar.
            4. Publique seu coment√°rio na issue usando o comando: `gh issue comment "${ISSUE_NUMBER}" --body "Seu coment√°rio em portugu√™s aqui"`
            5. Selecione as labels mais relevantes da lista que voc√™ recuperou.
            6. Aplique as labels selecionadas na issue usando: `gh issue edit "${ISSUE_NUMBER}" --add-label "label1,label2"`
            7. Se a label "status/needs-triage" estiver presente, remova-a usando: `gh issue edit "${ISSUE_NUMBER}" --remove-label "status/needs-triage"`

            ## Diretrizes
            - O seu coment√°rio final DEVE estar em Portugu√™s do Brasil.
            - Use apenas labels que j√° existem no reposit√≥rio.
            - Fa√ßa a triagem e comente apenas na issue atual.
            - Referencie todas as vari√°veis de ambiente como "${VAR}" (com aspas e chaves).

      - name: 'Post Issue Triage Failure Comment'
        if: |-
          ${{ failure() && steps.gemini_issue_triage.outcome == 'failure' }}
        uses: 'actions/github-script@v7'
        with:
          github-token: '${{ steps.generate_token.outputs.token || secrets.GITHUB_TOKEN }}'
          script: |-
            github.rest.issues.createComment({
              owner: '${{ github.repository }}'.split('/')[0],
              repo: '${{ github.repository }}'.split('/')[1],
              issue_number: '${{ github.event.issue.number }}',
              body: 'Ocorreu um problema com a triagem de issues do Gemini CLI. Por favor, verifique os [logs da action](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) para mais detalhes.'
            })
